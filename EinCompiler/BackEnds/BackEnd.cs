using System;
using System.Globalization;
using System.IO;

namespace EinCompiler.BackEnds
{
	public abstract class BackEnd
	{
		private TextWriter writer;

		public static void GenerateCode<T>(ModuleDescription module, TextWriter code)
			where T : BackEnd, new()
		{
			var generator = new T();
			generator.writer = code;

			generator.WriteLineComment( "============================================================================");
			generator.WriteLineComment($"Code generated by EinCompiler.");
			generator.WriteLineComment($"Generator: {typeof(T).Name}");
			generator.WriteLineComment($"Date:      {DateTime.Now.ToString(CultureInfo.InvariantCulture)}.");
			generator.WriteLineComment( "============================================================================");

			generator.WriteLine();

			generator.Generate(module);
		}

		protected abstract void WriteLineComment(string text);

		protected void WriteLine() => this.writer.WriteLine();

		protected void WriteLine(string str) => this.writer.WriteLine(str);

		protected void WriteLine(string fmt, params object[] args) => this.writer.WriteLine(string.Format(CultureInfo.InvariantCulture, fmt, args));
		
		protected void Write(string str) => this.writer.Write(str);

		protected void Write(string fmt, params object[] args) => this.writer.Write(string.Format(CultureInfo.InvariantCulture, fmt, args));

		protected TextWriter Code => this.writer;

		protected abstract void Generate(ModuleDescription module);
	}
}